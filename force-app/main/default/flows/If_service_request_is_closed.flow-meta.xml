<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Email_To_Employee</name>
        <label>Email To Employee</label>
        <locationX>578</locationX>
        <locationY>695</locationY>
        <actionName>Case.When_an_approver_approves_or_rejects_request_Email_to_employee</actionName>
        <actionType>emailAlert</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>SObjectRowId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
    </actionCalls>
    <actionCalls>
        <name>Email_to_Employee1</name>
        <label>Email to Employee1</label>
        <locationX>842</locationX>
        <locationY>695</locationY>
        <actionName>Case.Service_Request_Waiting_for_Resource_Input_Emp</actionName>
        <actionType>emailAlert</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>SObjectRowId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
    </actionCalls>
    <actionCalls>
        <name>Employee_closed_any_of_the_raised_request_email_to_the_approver</name>
        <label>Employee closed any of the raised request( email to the approver)</label>
        <locationX>50</locationX>
        <locationY>695</locationY>
        <actionName>Case.When_an_employee_closed_any_of_the_raised_request_sent_an_email_to_the_approver</actionName>
        <actionType>emailAlert</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>SObjectRowId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
    </actionCalls>
    <actionCalls>
        <name>When_service_request_is_closed_by_App_Email_to_employee</name>
        <label>When service request is closed by App(Email to employee)</label>
        <locationX>314</locationX>
        <locationY>695</locationY>
        <actionName>Case.When_an_approver_approves_or_rejects_request_Email_to_employee</actionName>
        <actionType>emailAlert</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>SObjectRowId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
    </actionCalls>
    <apiVersion>57.0</apiVersion>
    <decisions>
        <name>Service_Request_is_Closed_by_Assigne_or_HR</name>
        <label>Service Request is Closed by Assignee or HR or Himself</label>
        <locationX>578</locationX>
        <locationY>575</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>When_Service_Request_is_Closed_by_Employee</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Created_by_user_name.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>Get_last_modified_by_user_records.Name</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Case_Assignee__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Closed</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$Record__Prior.Status</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Employee_closed_any_of_the_raised_request_email_to_the_approver</targetReference>
            </connector>
            <label>When Service Request is Closed by Employee(Maternity)(Email To Assignee HR))</label>
        </rules>
        <rules>
            <name>Service_Request_is_Closed_by_Assignee_or_HR</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$Record__Prior.Status</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Created_by_user_name.Name</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>Get_last_modified_by_user_records.Name</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Closed</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>When_service_request_is_closed_by_App_Email_to_employee</targetReference>
            </connector>
            <label>Service Request is Closed by Assignee or HR(Email To Employee)</label>
        </rules>
        <rules>
            <name>When_status_is_waiting_for_employee_to_respond</name>
            <conditionLogic>(2 OR 3) AND 1</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$Record__Prior.Status</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Resignation Approved</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Resignation Rejected</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Email_To_Employee</targetReference>
            </connector>
            <label>When Resignation status is approved or rejected</label>
        </rules>
        <rules>
            <name>When_Status_is_waiting_for_response</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$Record__Prior.Status</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Waiting for Resource To Respond</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Email_to_Employee1</targetReference>
            </connector>
            <label>When Status is waiting for resource to respond</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <interviewLabel>Whenever {!$Flow.CurrentDateTime}</interviewLabel>
    <label>If service request is closed</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_Created_by_user_name</name>
        <label>Get Created by user name</label>
        <locationX>578</locationX>
        <locationY>455</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Service_Request_is_Closed_by_Assigne_or_HR</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.CreatedById</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>User</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_last_modified_by_user_records</name>
        <label>Get last modified by user records</label>
        <locationX>578</locationX>
        <locationY>335</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Created_by_user_name</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.LastModifiedById</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>User</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>452</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_last_modified_by_user_records</targetReference>
        </connector>
        <filterLogic>or</filterLogic>
        <filters>
            <field>Status</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Closed</stringValue>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Waiting for Resource To Respond</stringValue>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Resignation Approved</stringValue>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Resignation Rejected</stringValue>
            </value>
        </filters>
        <object>Case</object>
        <recordTriggerType>Update</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
</Flow>
